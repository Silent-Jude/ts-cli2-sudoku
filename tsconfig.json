{
  // 包含文件。
  "include": [
    "src/**/*"
  ],
  // 排除文件。
  "exclude": [
    "node_modules",
    "**/*.spec.ts"
  ],
  "compilerOptions": {
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的显示，仅为了类型检查。
    "experimentalDecorators": true, // 启用ES装饰器。
    "allowJs": true,  // 允许编译javascript文件。
    "module": "ES6", // 指定生成哪个模块系统代码："None"，"CommonJS"，"AMD"，"System"，"UMD"，"ES6"或"ES2015"。
    "target": "ES6", // 指定ECMAScript目标版本 "ES3"（默认）， "ES5"， "ES6"/ "ES2015"， "ES2016"， "ES2017"或 "ESNext"。 
    "moduleResolution": "Node", // module === "AMD" or "System" or "ES6" ? "Classic" : "Node" 决定如何处理模块。 https://www.tslang.cn/docs/handbook/module-resolution.html
    "isolatedModules": true, // 将每个文件作为单独的模块
    /*
    编译过程中需要引入的库文件的列表。 
    注意：如果--lib没有指定默认注入的库的列表。默认注入的库为： 
    ► 针对于--target ES5：DOM，ES5，ScriptHost 
    ► 针对于--target ES6：DOM，ES6，DOM.Iterable，ScriptHost
    */
    "lib": [
      "DOM",
      "ES6",
      "ES5",
      "ES7",
      "ES2015.Promise",
      "DOM.Iterable",
      "ScriptHost"
    ],
    "sourceMap": true, // 生成相应的 .map文件。
    "pretty": true, // 给错误和消息设置样式，使用颜色和上下文。
  }
}
